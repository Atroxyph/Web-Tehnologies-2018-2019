<?php

	/*
	 * @author Paul-Reftu
	 */

	require_once("NotAnExploitException.php");


	/*
	 * class whose instance represents a software vulnerability
	 */
	class Exploit {
		
		/*
		 * ID of the exploit
		 */
		private $id;
		/*
		 * author of the exploit
		 */
		private $author;
		/*
		 * Bugtraq ID of the exploit
		 */
		private $bid;
		/*
		 * the code of the exploit
		 */
		private $code;
		/*
		 * Common Vulnerability and Exposures ID of the exploit
		 */
		private $cve;
		/*
		 * date when the exploit was released
		 */
		private $date;
		/*
		 * description of the exploit
		 */
		private $description;
		/*
		 * Microsoft Security Bulletin ID of the exploit
		 */
		private $msb;
		/*
		 * Open Source Vulnerability Database ID of the exploit
		 */
		private $osvdb;
		/*
		 * the operating system that the exploit targets
		 */
		private $platform;
		/*
		 * the port number of the affected service if the exploit is remote
		 */
		private $port;
		/*
		 * the category of the exploit (dos, exploit, local, remote, shellcode, webapps)
		 */
		private $type;
		/*
		 * where the exploit was found (e.g ExploitDB)
		 */
		private $source;
		

		/*
		 * @param $exploit the exploit object whose information we use
		 *  to construct our Exploit instance
		 * @throws NotAnExploit
		 * constructs an object of type 'Exploit', taking into account the given information passed on by the given object
		 */
		public function __construct($exploit) {

			if ($exploit === null || !is_object($exploit))
				throw new NotAnExploitException();

			$exploitPropNames = self::getObjectPropNameList();

			foreach ($exploitPropNames as $propName) {
				$this->{$propName} = isset($exploit->{$propName}) ? $exploit->{$propName} : null;
			}

		} // END of __construct()

		/*
		 * TODO exception checking
		 *
		 * @param $propName
		 * returns the value of a specific property identified by the given name
		 */
		public function getValueOfProp($propName) {

			return $this->{$propName};

		} // END of getValueOfProp()

		/*
		 * returns a list of all property names of an 'Exploit' object
		 */
		public static function getObjectPropNameList() {

			return array("_id", "author", "bid", "code", "cve", "date", "description", "msb", "osvdb", "platform", "port", "type", "source");

		} // END of getObjectPropNameList()

		public function getId() { return $this->id; }

		public function getAuthor() { return $this->author; }

		public function getBid() { return $this->bid; }

		public function getCode() { return $this->code; }

		public function getCve() { return $this->cve; }

		public function getDate() { return $this->date; }

		public function getDescription() { return $this->description; }

		public function getMsb() { return $this->msb; }

		public function getOsvdb() { return $this->osvdb; }

		public function getPlatform() { return $this->platform; }

		public function getPort() { return $this->port; }

		public function getType() { return $this->type; }

		public function getSource() { return $this->source; }


		public function setId($id) { $this->id = $id; }

		public function setAuthor($author) { $this->author = $author; }

		public function setBid($bid) { $this->bid = $bid; }

		public function setCode($code) { $this->code = $code; }

		public function setCve($cve) { $this->cve = $cve; }

		public function setDate($date) { $this->date = $date; }

		public function setDescription($description) { $this->description = $description; }

		public function setMsb($msb) { $this->msb = $msb; }

		public function setOsvdb($osvdb) { $this->osvdb = $osvdb; }

		public function setPlatform($platform) { $this->platform = $platform; }

		public function setPort($port) { $this->port = $port; }

		public function setType($type) { $this->type = $type; }

		public function setSource($source) { $this->source = $source; }

	}

?>