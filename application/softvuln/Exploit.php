<?php

	/*
	 * @author Paul-Reftu
	 */

	require_once("NotAnExploitException.php");


	/*
	 * class whose instance represents a software vulnerability
	 */
	class Exploit {
		
		/*
		 * ID of the exploit
		 */
		private $id;
		/*
		 * author of the exploit
		 */
		private $author;
		/*
		 * Bugtraq ID of the exploit
		 */
		private $bid;
		/*
		 * the code of the exploit
		 */
		private $code;
		/*
		 * Common Vulnerability and Exposures ID of the exploit
		 */
		private $cve;
		/*
		 * date when the exploit was released
		 */
		private $date;
		/*
		 * description of the exploit
		 */
		private $description;
		/*
		 * Microsoft Security Bulletin ID of the exploit
		 */
		private $msb;
		/*
		 * Open Source Vulnerability Database ID of the exploit
		 */
		private $osvdb;
		/*
		 * the operating system that the exploit targets
		 */
		private $platform;
		/*
		 * the port number of the affected service if the exploit is remote
		 */
		private $port;
		/*
		 * the category of the exploit (dos, exploit, local, remote, shellcode, webapps)
		 */
		private $type;
		/*
		 * where the exploit was found (e.g ExploitDB)
		 */
		private $source;
		

		/*
		 * @param $exploit the exploit object whose information we use
		 *  to construct our Exploit instance
		 * @throws NotAnExploit
		 */
		public function __construct($exploit) {

			if ($exploit === null || !is_object($exploit))
				throw new NotAnExploitException();

			$exploitPropNames = self::getObjectPropNameList();

			foreach ($exploitPropNames as $propName) {
				$this->{$propName} = isset($exploit->{$propName}) ? $exploit->{$propName} : null;

			}

		}

		public static function getObjectPropNameList() {

			return array("_id", "author", "bid", "code", "cve", "date", "description", "msb", "osvdb", "platform", "port", "type", "source");

		}

		public function getValueOfProp($propName) {

			return $this->{$propName};

		}

	}

?>