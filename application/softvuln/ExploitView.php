<?php

	require_once("Exploit.php");

	class ExploitView {
		const maxNoOfPropReadChars = 500;

		public function printExploitInfo($exploit) {

			echo "<div>";
			echo "<h3>Exploit " . $exploit->_id . ":" . "</h3>";
			echo "<ul>";

			foreach(Exploit::getObjectPropNameList() as $propName) {
				if ($exploit->getValueOfProp($propName) !== null) {
					ExploitView::echoProperty($exploit->getValueOfProp($propName), $propName);
				}
			}

			echo "</ul>";
			echo "</div>";

		}

		/*
		 * Cross Site Scripting (XSS) - proof method that echoes given property from an exploit (e.g Author, Source etc)
		 */
		private static function echoProperty($prop, $propName) {

			if (is_array($prop)) {
				foreach ($prop as $subProp) {
					echo "<li>" . $propName . ": " . htmlspecialchars(ExploitView::extractPartialPropVal($subProp, ExploitView::maxNoOfPropReadChars) , ENT_QUOTES, "UTF-8") . "</li>";
				}
			}
			else if (is_string($prop)) {
				echo "<li>" . $propName . ": " . htmlspecialchars(ExploitView::extractPartialPropVal($prop, ExploitView::maxNoOfPropReadChars), ENT_QUOTES, "UTF-8") . "</li>";
			}

		}

		private static function extractPartialPropVal($propVal, $noOfCharsToExtract) {

			return (strlen($propVal) > $noOfCharsToExtract) ? 
				(substr($propVal, 0, $noOfCharsToExtract) . "[...]") :
				(substr($propVal, 0, $noOfCharsToExtract)) 
			;

		}

	}

	

?>